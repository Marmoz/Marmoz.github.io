{"meta":{"title":"Hsuoamni的个人博客","subtitle":"","description":"卧薪尝胆中~","author":"ZAH","url":"http://Marmoz.github.io","root":"/"},"pages":[{"title":"","date":"2023-12-20T06:37:55.048Z","updated":"2023-12-20T06:37:55.048Z","comments":true,"path":"about/index.html","permalink":"http://marmoz.github.io/about/index.html","excerpt":"","text":"大三网安在读"},{"title":"","date":"2023-12-20T06:45:12.467Z","updated":"2023-12-20T06:45:12.467Z","comments":true,"path":"404.html","permalink":"http://marmoz.github.io/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"所有标签","date":"2023-12-20T06:39:11.631Z","updated":"2023-12-20T06:39:11.631Z","comments":true,"path":"tags/index.html","permalink":"http://marmoz.github.io/tags/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2023-12-20T06:38:49.805Z","updated":"2023-12-20T06:38:49.805Z","comments":true,"path":"categories/index.html","permalink":"http://marmoz.github.io/categories/index.html","excerpt":"","text":""},{"title":"我的朋友们","date":"2023-12-20T06:43:53.187Z","updated":"2023-12-20T06:43:53.187Z","comments":true,"path":"friends/index.html","permalink":"http://marmoz.github.io/friends/index.html","excerpt":"这里写友链上方的内容。","text":"这里写友链上方的内容。 这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。"}],"posts":[{"title":"W1R3S 1.0.1靶机渗透","slug":"W1R3S 1.0.1靶机渗透","date":"2023-12-24T13:16:41.000Z","updated":"2023-12-24T13:31:49.261Z","comments":true,"path":"2023/12/24/W1R3S 1.0.1靶机渗透/","permalink":"http://marmoz.github.io/2023/12/24/W1R3S%201.0.1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F/","excerpt":"","text":"渗透过程信息收集使用工具：nmap 基本信息扫描先确定网段测试时的网段是192.168.148.0&#x2F;24 扫描整个c段确定目标ip注：登录普通账户进行渗透，避免安全问题，每步+sudo1sudo nmap -sn 192.168.148.0/24 类似命令： 1sudo arp-scan -l n的意思是不扫描端口，只显示响应的主机ip信息（sP被弃用，现在用sn），比sL（列表扫描）多了一步轻量级的侦查 –send-ip(公网探测) 128是本机ip，所以目标ip是192.168.148.129 扫描目标ip开放端口1sudo nmap -sT --min-rate 10000 -p- 192.168.148.129 -oA nmapscan/ports --min-rate 10000: 最小速率10000 （不能太快） -p: 指定端口范围（默认扫常见1000个端口） -p-：扫描所有端口（1-65535） -sT: 完整tcp三次握手扫描（比默认值-sS（发syn包，只建立tcp连接第一步，用于快速扫描）较慢但准确，且更容易绕过防火墙） -oA ：结果全格式输出（o输出，A三种格式全输出） 渗透各步骤都要记录 原则：准+隐蔽性 扫描结果： 详细信息扫描提取端口号到$port变量1ports=$(grep open nmapscan/ports.nmap |awk -F&#x27;/&#x27; &#x27;&#123;print $1&#125;&#x27;|paste -sd &#x27;,&#x27;) grep open提取含open的那几行 awk -F&#39;/&#39; &#39;&#123;print $1&#125;&#39; -F指定分隔符为&#x2F;，{print $1}打印分隔出来的第一列 paste -sd &#39;,&#39; s指定到一行，d指定分隔符为逗号 ports=$(xxx)变量赋值（注意$ports变量只在一个窗口有效） 编写扫描命令并扫描扫描tcp1sudo nmap -sT -sV -sC -O -p 21,22,80,3306 192.168.148.129 -oA nmapscan/detail -sV: 探测各服务的版本 -sC：使用默认脚本进行扫描 -O：探测操作系统的版本 tab键读取变量具体值 这是最重的一次扫描（所以限制了端口号，分阶段扫描可以大大提示扫描的效率） 扫描结果： 根据扫描结果确定攻击链和渗透的优先级 扫描udp（扫描速度快）1sudo nmap -sU --top-ports 20 192.168.148.129 -oA nmapscan/udp --top-ports 20：指定最常见的20个端口扫描 扫描结果： 默认漏洞脚本扫描1sudo nmap --script=vuln -p 21,22,80,3306 192.168.148.129 -oA nmapscan/vuln --script=vuln：指定脚本为漏洞扫描 扫描结果： 优先级 先看21，3306 重点看80 看不出突破点及时切换攻击向量 一般不选dos攻击 http-enum：枚举 当找不到攻击连的时候看看有无ipv6的地址渗透阶段先看21端口的ftp服务 之前说过可以匿名登录，输入匿名登录名称anonymous，密码为空，切换至binary（二进制模式，不切换下载的文件可能是损坏的） ？可以查看命令提示 输入prompt命令就不用每次下载文件都交互式确定 mget（多下载）content下的三个txt文件，get单个文件 下载完所有目录及子目录下的文件（binary）后退出ftpcat *.txt 同时查看导出的文件 inc是公司的意思，new意味着不完善 hash-indentifier识别一下上面的第一个字符串的加密算法为md5cmd5里查询md5值如下 base64解码一下第二个字符串如下 分隔符下面的是wires公司员工列表，注意不同身份的权限特点底下的字符串用在线逆序和截图镜像功能查看内容 再看3306端口的mysql服务，发现有主机ip限制，放弃 最后看80端口的web服务浏览器访问ip，发现是apache默认页面 gobuster目录爆破，发现存在wordpress和cuppaCMS 由于wordpress访问时自动跳转localhost，所以改一下hosts文件，增加两个： 12网站IP localhost网站ip 任意域名 改了之后还是不行，所以优先级排后，先攻击cms网站 Cuppa CMS的渗透 要对点next会对系统造成不可逆的改变或被管理员发现有心理预期 创建管理员失败searchsploit命令查找此CMS的历史漏洞 找到一条 使用searchsploit cuppa -m 25971将对应的文档下载到当前文件夹中 查看一下发现是php的文件包含漏洞，使用exploit测试一下可不可行简单构造exploit：http://192.168.148.129/administrator/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd 有反应但是没有读出来找cms源码做代码审计发现是post传参 POST传参进行查看发现可行1curl --data-urlencode &#x27;urlConfig=../../../../../../../../../etc/passwd&#x27; http://192.168.148.129/administrator/alerts/alertConfigField.php --data-urlencode 参数等同于 -d（–data），发送 POST 请求的数据体，区别在于会自动将发送的数据进行 URL 编码 x说明密码以哈希形式存放在shadow中 查看shadow文件并保存文件用john进行爆破1curl --data-urlencode &#x27;urlConfig=../../../../../../../../../etc/shadow&#x27; http://192.168.148.129/administrator/alerts/alertConfigField.php 只保留有哈希的数据到shadow.hash 直接丢给john爆破（不行的话在加复杂的参数） 一般来说www-data是功能性账号，w1r3s账号的权限高的可能性更大 试着用22端口的ssh服务登录，使用w1r3s的账号密码登录成功进入w1r3s用户的shell界面 查看w1r3s用户的权限并尝试提权拥有sudo权限，且sudo -l有3个 ALL，意味着拥有所有的sudo权限（和root一样的权限），sudo &#x2F;bin&#x2F;bash到root用户 &#x2F;root目录下发现flag.txt，整个攻击到此结束 补充：22端口的ssh暴力破解一般暴力破解优先级放在最后，其他方法行不通的时候再尝试，不推荐使用 构造user.list字典，选择有可能的用户名（hector是之前ftp暴露的信息） 使用hydra进行爆破1hydra -L user.list -P /usr/share/wordlists/rockyou.txt ssh://192.168.148.129 -t 4 -L 从列表中提取一个用户名 -P 指定密码字典 -t 指定爆破线程 爆破得到密码，之后的操作同上 总结首先进行nmap扫描出目标ip和端口信息，获取开放的服务，然后根据服务特点确定渗透的优先级，针对特定的服务搜索历史可利用的漏洞并尝试利用获取系统的shell，最后尝试提权获取系统的root权限","categories":[{"name":"渗透","slug":"渗透","permalink":"http://marmoz.github.io/categories/%E6%B8%97%E9%80%8F/"}],"tags":[{"name":"渗透WP","slug":"渗透WP","permalink":"http://marmoz.github.io/tags/%E6%B8%97%E9%80%8FWP/"},{"name":"vulnhub靶机练习","slug":"vulnhub靶机练习","permalink":"http://marmoz.github.io/tags/vulnhub%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/"}],"author":"Hsuoamni"},{"title":"效率工具和设置之终端复用与界面移动","slug":"效率工具和设置之终端复用与界面移动","date":"2023-12-24T13:15:54.000Z","updated":"2023-12-24T13:29:17.995Z","comments":true,"path":"2023/12/24/效率工具和设置之终端复用与界面移动/","permalink":"http://marmoz.github.io/2023/12/24/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7%E5%92%8C%E8%AE%BE%E7%BD%AE%E4%B9%8B%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8%E4%B8%8E%E7%95%8C%E9%9D%A2%E7%A7%BB%E5%8A%A8/","excerpt":"","text":"渗透原则用命令行，不用大型框架，用英文工具，用透明开源工具，不做个性设置，尽量不用鼠标 kali 好用工具curl 浏览器 tcpdump 对标 wireshark base64 一个工具完成一件事，少用大型框架，比如msf tmux简易教程tmux命令打开一个tmux会话 ctrl+b 固定按键 组合按键： 固定+%：左右分屏 固定+“：上下分屏 固定+方向键：移动到指定窗口 固定+[：复制模式（一点点显示全，类似less命令）g指定跳转行，退出q or esc 固定+alt(ctrl)+方向键：改变单个窗口大小 固定+z：当前窗口最大化（最小化） 固定+x：强制关闭当前窗口 固定+？：查看帮助 exit关闭当前窗口 光标快速移动教程ctrl+a：回到命令开头 ctrl+e：回到命令结尾 ctrl+方向键：以词为单位移动（alt+b：向左移动一个词 alt+f：向右移动一个词） ctrl+d：删后字 ctrl+w：删前词 alt+d：删后词 ctrl+u（upper）：光标前删完 ctrl+k：光标后删完 其他ctrl+l：清屏快捷键","categories":[{"name":"渗透","slug":"渗透","permalink":"http://marmoz.github.io/categories/%E6%B8%97%E9%80%8F/"}],"tags":[{"name":"渗透技巧","slug":"渗透技巧","permalink":"http://marmoz.github.io/tags/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7/"}],"author":"Hsuoamni"},{"title":"Vol3使用说明","slug":"vol3使用说明","date":"2023-12-19T12:50:32.000Z","updated":"2023-12-20T13:32:16.547Z","comments":true,"path":"2023/12/19/vol3使用说明/","permalink":"http://marmoz.github.io/2023/12/19/vol3%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/","excerpt":"","text":"Vol3使用说明查看基本信息 1python vol.py -f E:\\game\\2023ZKSS\\检材3\\memdump2023.raw -s E:\\DianZiQuZheng\\Volatility\\volatility3python-2.5.0\\volatility3-2.5.0\\volatility3\\symbols windows.info 能解析的直接一把梭 不能解析的原因：在线下载的symbols网站停止服务了 不能解析的参照以下步骤:1.先联网跑一遍查看请求的symbols文件（-v查看详细日志） 2.在事先准备好的离线的symbols文件中找出对应的xz压缩包，解压到对应的symbols目录下（注意还需加一层子目录，如.\\symbols\\windows\\ntkrnlmp.pdb），一定要以json格式存放，否则可能解析不出来（23某实数杯） 3.断网跑命令 1python vol.py -f E:\\game\\2023ZKSS\\检材3\\memdump2023.raw -s E:\\DianZiQuZheng\\Volatility\\volatility3python-2.5.0\\volatility3-2.5.0\\volatility3\\symbols windows.info （-s指定symbols目录）","categories":[{"name":"内存取证","slug":"内存取证","permalink":"http://marmoz.github.io/categories/%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81/"}],"tags":[{"name":"内存","slug":"内存","permalink":"http://marmoz.github.io/tags/%E5%86%85%E5%AD%98/"},{"name":"Volatility3","slug":"Volatility3","permalink":"http://marmoz.github.io/tags/Volatility3/"}],"author":"Hsuoamni"}],"categories":[{"name":"渗透","slug":"渗透","permalink":"http://marmoz.github.io/categories/%E6%B8%97%E9%80%8F/"},{"name":"内存取证","slug":"内存取证","permalink":"http://marmoz.github.io/categories/%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81/"}],"tags":[{"name":"渗透WP","slug":"渗透WP","permalink":"http://marmoz.github.io/tags/%E6%B8%97%E9%80%8FWP/"},{"name":"vulnhub靶机练习","slug":"vulnhub靶机练习","permalink":"http://marmoz.github.io/tags/vulnhub%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/"},{"name":"渗透技巧","slug":"渗透技巧","permalink":"http://marmoz.github.io/tags/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7/"},{"name":"内存","slug":"内存","permalink":"http://marmoz.github.io/tags/%E5%86%85%E5%AD%98/"},{"name":"Volatility3","slug":"Volatility3","permalink":"http://marmoz.github.io/tags/Volatility3/"}]}